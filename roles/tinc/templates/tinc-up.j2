#!/bin/bash
# **** {{ ansible_managed }} ****

netmask={{ tinc__v_config_net.mask }}
{% if ansible_virtualization_type == 'openvz' %}
ip={{ tinc__ip_binary_local }}
{% else %}
ip={{ tinc__ip_binary_orig }}
{% endif %}

case $NAME in
{% for h,d in tinc__v_peers.data[tinc__v_config_net_name].iteritems() %}
  {{ d.host_name }})
    ipaddr='{{ d.address }}' ;;
{% endfor %}
  *)  exit 1 ;;
esac

$ip l s ${INTERFACE} up
$ip a a $ipaddr/$netmask dev ${INTERFACE}

{% for h,d in tinc__v_peers.data[tinc__v_config_net_name].iteritems() %}
{%   if d.routes %}
if [[ "$NAME" = "{{ d.host_name }}" ]]; then
{%     for r in d.routes %}
  $ip r a unreachable {{ r }}
{%     endfor %}
else
{%     for r in d.routes %}
{%       if tinc__v_config_net.mode is not defined or tinc__v_config_net.mode == 'router' %}
  $ip r a {{ r }} dev ${INTERFACE}
{%       else %}
  $ip r a {{ r }} via {{ d.address }} dev ${INTERFACE}
{%       endif %}
{%     endfor %}
fi
{%   endif %}
{% endfor %}

exit 0
